Nerdbank.Streams.MultiplexingStream.AcceptChannel(ulong id, Nerdbank.Streams.MultiplexingStream.ChannelOptions? options = null) -> Nerdbank.Streams.MultiplexingStream.Channel!
Nerdbank.Streams.MultiplexingStream.Channel.QualifiedId.get -> Nerdbank.Streams.MultiplexingStream.QualifiedChannelId
Nerdbank.Streams.MultiplexingStream.ChannelOfferEventArgs.QualifiedId.get -> Nerdbank.Streams.MultiplexingStream.QualifiedChannelId
Nerdbank.Streams.MultiplexingStream.Options.DefaultChannelTraceSourceFactoryWithQualifier.get -> System.Func<Nerdbank.Streams.MultiplexingStream.QualifiedChannelId, string!, System.Diagnostics.TraceSource?>?
Nerdbank.Streams.MultiplexingStream.Options.DefaultChannelTraceSourceFactoryWithQualifier.set -> void
Nerdbank.Streams.MultiplexingStream.Options.GetFrozenCopy() -> Nerdbank.Streams.MultiplexingStream.Options!
Nerdbank.Streams.MultiplexingStream.Options.IsFrozen.get -> bool
Nerdbank.Streams.MultiplexingStream.Options.Options(Nerdbank.Streams.MultiplexingStream.Options! copyFrom) -> void
Nerdbank.Streams.MultiplexingStream.QualifiedChannelId
Nerdbank.Streams.MultiplexingStream.QualifiedChannelId.Equals(Nerdbank.Streams.MultiplexingStream.QualifiedChannelId other) -> bool
Nerdbank.Streams.MultiplexingStream.QualifiedChannelId.Id.get -> ulong
Nerdbank.Streams.MultiplexingStream.QualifiedChannelId.OfferedLocally.get -> bool
Nerdbank.Streams.MultiplexingStream.QualifiedChannelId.QualifiedChannelId(ulong id, bool offeredLocally) -> void
Nerdbank.Streams.MultiplexingStream.RejectChannel(ulong id) -> void
override Nerdbank.Streams.MultiplexingStream.QualifiedChannelId.Equals(object? obj) -> bool
override Nerdbank.Streams.MultiplexingStream.QualifiedChannelId.GetHashCode() -> int
override Nerdbank.Streams.MultiplexingStream.QualifiedChannelId.ToString() -> string!
static Nerdbank.Streams.MultiplexingStream.Create(System.IO.Stream! stream, Nerdbank.Streams.MultiplexingStream.Options? options = null) -> Nerdbank.Streams.MultiplexingStream!